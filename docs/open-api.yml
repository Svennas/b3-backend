
# Tables: User, Program, Exercise, ProgramExercise

openapi: 3.1.0
info:
  title: Java API For Final Project
  description: Api file for the final project Bob's Bodybuilding
  version: 1.0.0
  contact:
    name: Bob's bodybuilding

servers:
  - url: http://localhost:4000  # ska ändras
tags:
  - name: users
  - name: programs
  - name: exercises
  - name: programExercises
paths:

  ## sign up & log in paths?

  /exercises: # delade exercises, tillgängligt för alla användare
    get:
      tags:
        - exercises
      summary: Get all shared exercises
      description: Get a list of all shared exercises
      operationId: getExercises
      responses:
        '200':
          description: A list of all shared exercises
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllExercisesResponse'

  /users: # används vid login / signup
    post:
      tags:
        - users
      summary: Create a user
      description: Create a new user account
      operationId: createUser
      requestBody:  # lägg till request body för fält: firstname, lastname, username, password
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Successfully created a new user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
    get:
      tags:
        - users
      summary: Get all users
      description: Get a list of all users
      operationId: getUsers
      responses:
        '200':
          description: A list of all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsersResponse'


  users/{userId}/programs:
    post:
      tags:
        - programs
      summary: Create a program
      description: Create a new program with a title and a list of exercise objects
      operationId: createProgram
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProgramRequest'
      responses:
        '201':
          description: Successfully created a new program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProgramResponse'
    get:
      tags:
        - programs
      summary: Get all the user's programs
      description: Get a list of all programs for the user
      operationId: getPrograms
      responses:
        '200':
          description: Successfully returned a list of all programs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllProgramsResponse'

  users/{userId}/programs/{programId}:
    put:
      tags:
        - programs
      summary: Update a program
      description: User updates an existing program. All fields are required from the client.
      operationId: updateProgram
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to update
          required: true
          schema:
            type: integer
      requestBody:  # lägg till request body för fält: title och array av program exercise objects
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProgramRequest'
      responses:
        '201':
          description: Successfully updated the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProgramResponse'
    delete:
      tags:
        - programs
      summary: Delete a program
      description: Delete an existing program
      operationId: deleteProgram
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'

  users/{userId}/programs/{programId}/programexercises:
    post:
      tags:
        - screenings
      summary: Create a program exercise
      description: Create a program exercise for an existing program
      operationId: createProgramExercise
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to add a program exercise to
          required: true
          schema:
            type: integer
      requestBody:  # lägg till title, desc, sets, reps
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProgramexerciseRequest'
      responses:
        '201':
          description: Successfully created a program exercise for the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProgramexerciseResponse'
    get:
      tags:
        - programexercises
      summary: Get all programexercises
      description: Get a list of all programexercises for the specified program
      operationId: getProgramexercises
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to add a program exercise to
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned a list of all program exercises of the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllProgramexercisesResponse'

  users/{userId}/programs/{programId}/programexercises/{programexerciseId}:
    put:
      tags:
        - programexercises
      summary: Update a programexercise
      description: User updates an existing program's specified program exercise. All fields are required from the client.
      operationId: updateProgramexercise
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to update
          required: true
          schema:
            type: integer
        - name: programexerciseId
          in: path
          description: The ID of the program exercise to update
          required: true
          schema:
            type: integer
      requestBody: # lägg till request body för fält: title och array av program exercise objects
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProgramexerciseRequest'
      responses:
        '201':
          description: Successfully updated the specified program exercise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProgramexerciseResponse'
    delete:
      tags:
        - programexercises
      summary: Delete a program exercise
      description: Delete a program exercise from a specified program
      operationId: deleteProgramexercise
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to update
          required: true
          schema:
            type: integer
        - name: programexerciseId
          in: path
          description: The ID of the program exercise to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the specified program exercise from the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramexerciseResponse'



components:
  schemas:
    CreateUser:
      type: object
      required: [firstName, lastName, userName, password]
      properties:
        firstName:
          type: string
          example: "Chris"
        lastName:
          type: string
          example: "Wolstenholme"
        userName:
          type: string
          example: "chriswol"
        password:
          type: string
          example: "password"
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Chris"
        email:
          type: string
          example: "chris@muse.mu"
        phone:
          type: string
          example: "+44729388192"
        createdAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"
        updatedAt:
          type: string
          format: DateTime
          example: "2023-03-14T11:01:56.633+00:00"

    AllUsers:
      type: array
      items:
        $ref: '#/components/schemas/User'



    CreateProgramRequest:
      type: object
      properties:
        title:
          type: string
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Exercise'
      required:
        - title
        - exercises

      Exercise:
        type: object
        properties:
          title:
            type: string
          description:
            type: string
          sets:
            type: integer
          reps:
            type: integer

      ProgramResponse:
        type: object
        properties:
          id:
            type: string  # alt. integer
          title:
            type: string
          exercises:
            type: array
            items:
              $ref: '#/components/schemas/Exercise'

    AllPrograms:
      type: array
      items:
        $ref: '#/components/schemas/Program'


