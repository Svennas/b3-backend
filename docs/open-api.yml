openapi: 3.1.0
info:
  title: Java API For Final Project
  description: Api file for the final project Bob's Bodybuilding
  version: 1.0.0
  contact:
    name: Bob's bodybuilding

servers:
  - url: http://localhost:4000  # ska ändras vid online deploy
tags:
  - name: users
  - name: programs
  - name: privateExercises
  - name: sharedExercises
  - name: programExercises
paths:
  /sharedexercises: # delade exercises, tillgängligt för alla användare
    get:
      tags:
        - sharedExercises
      summary: Get all shared exercises
      description: Get a list of all shared exercises
      operationId: getExercises
      responses:
        '200':
          description: A list of all shared exercises
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllExercisesResponse'

  /sharedexercises/{exerciseId}:
    get:
      tags:
        - sharedExercises
      summary: Get a shared exercise by id
      description: Get a shared exercise by id
      operationId: getExerciseById
      parameters:
        - name: exerciseId
          in: path
          description: The ID of the exercise
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: An exercise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'

  /users:
    post:
      tags:
        - users
      summary: Create a user
      description: Create a new user account
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Successfully created a new user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      tags:
        - users
      summary: Get all users
      description: Get a list of all users
      operationId: getUsers
      responses:
        '200':
          description: A list of all users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsersResponse'

  /users/{userId}:
    get:
      tags:
        - users
      summary: Get a user by id
      description: Get a user by id
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}/privateexercises:
    post:
      tags:
        - privateExercises
      summary: Create a private exercise
      description: Create a new private exercise
      operationId: createExercise
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExerciseRequest'
      responses:
        '201':
          description: Successfully created a new program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
    get:
      tags:
        - privateExercises
      summary: Get all the user's private exercises
      description: Get a list of all private exercises for the user
      operationId: getPrivateExercises
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned a list of all exercises
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllExercisesResponse'


  /users/{userId}/programs:
    post:
      tags:
        - programs
      summary: Create a program
      description: Create a new program with a title and a list of exercise objects
      operationId: createProgram
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProgramRequest'
      responses:
        '201':
          description: Successfully created a new program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
    get:
      tags:
        - programs
      summary: Get all the user's programs
      description: Get a list of all programs for the user
      operationId: getPrograms
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned a list of all programs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllProgramsResponse'

  /users/{userId}/programs/{programId}:
    get:
      tags:
        - programs
      summary: Get a program
      description: Get a specific program for the user
      operationId: getProgram
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
    put:
      tags:
        - programs
      summary: Update a program
      description: User updates an existing program. All fields are required from the client (title & programexercises list)
      operationId: updateProgram
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProgramRequest'
      responses:
        '201':
          description: Successfully updated the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'
    delete:
      tags:
        - programs
      summary: Delete a program
      description: Delete an existing program
      operationId: deleteProgram
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Program'

  /users/{userId}/programs/{programId}/programexercises:
    post:
      tags:
        - programExercises
      summary: Create a program exercise
      description: Create a program exercise for an existing program
      operationId: createProgramExercise
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to add a program exercise to
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProgramexerciseRequest'
      responses:
        '201':
          description: Successfully created a program exercise for the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programexercise'
    get:
      tags:
        - programExercises
      summary: Get all programexercises
      description: Get a list of all programexercises for the specified program
      operationId: getProgramexercises
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to add a program exercise to
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully returned a list of all program exercises of the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllProgramexercisesResponse'

  /users/{userId}/programs/{programId}/programexercises/{programexerciseId}:
    get:
      tags:
        - programExercises
      summary: Get a programexercise
      description: Get a specific programexercise from the program
      operationId: getProgramexercise
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to retrieve
          required: true
          schema:
            type: integer
        - name: programexerciseId
          in: path
          description: The ID of the program exercise to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the specified program exercise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programexercise'
    put:
      tags:
        - programExercises
      summary: Update a programexercise
      description: User updates an existing program's specified program exercise. All fields are required from the client.
      operationId: updateProgramexercise
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to update
          required: true
          schema:
            type: integer
        - name: programexerciseId
          in: path
          description: The ID of the program exercise to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProgramexerciseRequest'
      responses:
        '201':
          description: Successfully updated the specified program exercise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programexercise'
    delete:
      tags:
        - programExercises
      summary: Delete a program exercise
      description: Delete a program exercise from a specified program
      operationId: deleteProgramexercise
      parameters:
        - name: userId
          in: path
          description: The ID of the user
          required: true
          schema:
            type: integer
        - name: programId
          in: path
          description: The ID of the program to update
          required: true
          schema:
            type: integer
        - name: programexerciseId
          in: path
          description: The ID of the program exercise to update
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the specified program exercise from the specified program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programexercise'



components:
  schemas:
    CreateUserRequest:
      type: object
      required: [ firstName, lastName, userName, password ]
      properties:
        firstName:
          type: string
          example: "Chris"
        lastName:
          type: string
          example: "Wolstenholme"
        userName:
          type: string
          example: "chriswol"
        password:
          type: string
          example: "password"

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        firstName:
          type: string
          example: "Chris"
        lastName:
          type: string
          example: "Wolstenholme"
        userName:
          type: string
          example: "chriswol"
        password:
          type: string
          example: "password"
        createdAt:
          type: string
          format: DateTime
          example: "2024-03-14T11:01:56.633+00:00"    # createdAt och updatedAt krav på alla ?
        updatedAt:
          type: string
          format: DateTime
          example: "2024-03-14T11:01:56.633+00:00"

    AllUsersResponse:
      type: array
      items:
        $ref: '#/components/schemas/User'



    CreateProgramRequest:
      type: object
      required:
        - title
        - exercises
      properties:
        title:
          type: string
          example: "My new program"
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Programexercise'

    UpdateProgramRequest:
      type: object
      required:
        - title
        - exercises
      properties:
        title:
          type: string
          example: "My updated program"
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Programexercise'


    Program:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Programexercise'

    AllProgramsResponse:
      type: array
      items:
        $ref: '#/components/schemas/Program'


    Exercise:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Yoga The Camel"
        description:
          type: string
          example: "For a strong chest and core"

    CreateExerciseRequest:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          example: "Yoga The Camel"
        description:
          type: string
          example: "For a strong chest and core"

    AllExercisesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Exercise'


    Programexercise:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "Squat"
        description:
          type: string
          example: "Lower body strength exercise"
        sets:
          type: integer
          example: 3
        reps:
          type: integer
          example: 10

    CreateProgramexerciseRequest:
      type: object
      required:
        - title
        - description
        - sets
        - reps
      properties:
        title:
          type: string
          example: "Squat"
        description:
          type: string
          example: "Lower body strength exercise"
        sets:
          type: integer
          example: 3
        reps:
          type: integer
          example: 10

    AllProgramexercisesResponse:
      type: array
      items:
        $ref: '#/components/schemas/Programexercise'

    UpdateProgramexerciseRequest:
      type: object
      required:
        - title
        - description
        - sets
        - reps
      properties:
        title:
          type: string
          example: "Squat 2.0"
        description:
          type: string
          example: "Lower body strength exercise"
        sets:
          type: integer
          example: 30
        reps:
          type: integer
          example: 100